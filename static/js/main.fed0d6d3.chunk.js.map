{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isReversed","setIsReversed","allGoods","goods","preparedGoods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","isReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,QACnBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAAOL,EAAQE,GACvC,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAEE,cAAcD,GAEzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMUO,CAAiBlB,EAAiBK,EAAQE,GAOrDY,EAAUd,GAAUE,EAE1B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAWJ,IAE3BsB,QAAS,kBAAMjB,EAAUL,IAP3B,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAWH,IAE3BqB,QAAS,kBAAMjB,EAAUJ,IAP3B,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IAPhC,qBAYCY,GACD,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAlDM,WACZjB,EAAU,IACVE,GAAc,IA6CV,sBAUF,6BACGC,EAASe,KAAI,SAAAC,GAAI,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fed0d6d3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'title';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortBy, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((a, b) => {\n      switch (sortBy) {\n        case SORT_BY_ALPHABET:\n          return a.localeCompare(b);\n\n        case SORT_BY_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const allGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  const reset = () => {\n    setSortBy('');\n    setIsReversed(false);\n  };\n\n  const isReset = sortBy || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortBy !== SORT_BY_ALPHABET },\n          )}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortBy !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {allGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}